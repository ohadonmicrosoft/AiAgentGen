rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/userProfiles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }
    
    // User profiles
    match /userProfiles/{userId} {
      // Users can read their own profile
      // Users can create their own profile
      // Users can update their own profile
      // Admins can read all profiles
      allow get: if isOwner(userId) || isAdmin();
      allow list: if isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Agents
    match /agents/{agentId} {
      // Public agents can be read by anyone
      // Private agents can only be read by their owner or admins
      // Agents can only be created by authenticated users
      // Agents can only be updated or deleted by their owner or admins
      allow get: if resource.data.isPublic == true || isOwner(resource.data.ownerId) || isAdmin();
      allow list: if resource.data.isPublic == true || isOwner(resource.data.ownerId) || isAdmin();
      allow create: if isSignedIn() && request.resource.data.ownerId == request.auth.uid;
      allow update: if isOwner(resource.data.ownerId) || isAdmin();
      allow delete: if isOwner(resource.data.ownerId) || isAdmin();
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 